// <auto-generated />
using System;
using BD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BD.Migrations
{
    [DbContext(typeof(ProyectosContext))]
    partial class ProyectosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BD.ApprovalRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ApproverRole_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Area_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int?>("Type_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRole_ID");

                    b.HasIndex("Area_ID");

                    b.HasIndex("Type_ID");

                    b.ToTable("ApprovalRule", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApproverRole_ID = 1,
                            MaxAmount = 100000m,
                            MinAmount = 0m,
                            StepOrder = 1
                        },
                        new
                        {
                            Id = 2L,
                            ApproverRole_ID = 2,
                            MaxAmount = 20000m,
                            MinAmount = 5000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 3L,
                            ApproverRole_ID = 2,
                            Area_ID = 2,
                            MaxAmount = 20000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type_ID = 2
                        },
                        new
                        {
                            Id = 4L,
                            ApproverRole_ID = 3,
                            MaxAmount = 0m,
                            MinAmount = 20000m,
                            StepOrder = 3
                        },
                        new
                        {
                            Id = 5L,
                            ApproverRole_ID = 2,
                            Area_ID = 1,
                            MaxAmount = 0m,
                            MinAmount = 5000m,
                            StepOrder = 2,
                            Type_ID = 1
                        },
                        new
                        {
                            Id = 6L,
                            ApproverRole_ID = 1,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type_ID = 2
                        },
                        new
                        {
                            Id = 7L,
                            ApproverRole_ID = 4,
                            Area_ID = 2,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type_ID = 1
                        },
                        new
                        {
                            Id = 8L,
                            ApproverRole_ID = 2,
                            Area_ID = 2,
                            MaxAmount = 30000m,
                            MinAmount = 10000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 9L,
                            ApproverRole_ID = 3,
                            Area_ID = 3,
                            MaxAmount = 0m,
                            MinAmount = 30000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 10L,
                            ApproverRole_ID = 4,
                            MaxAmount = 50000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type_ID = 4
                        });
                });

            modelBuilder.Entity("BD.ApprovalStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("id");

                    b.ToTable("ApprovalStatus", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            id = 2,
                            Name = "Approved"
                        },
                        new
                        {
                            id = 3,
                            Name = "Rejected"
                        },
                        new
                        {
                            id = 4,
                            Name = "Observed"
                        });
                });

            modelBuilder.Entity("BD.ApproverRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("id");

                    b.ToTable("ApproverRole", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Líder de Área"
                        },
                        new
                        {
                            id = 2,
                            Name = "Gerente"
                        },
                        new
                        {
                            id = 3,
                            Name = "Director"
                        },
                        new
                        {
                            id = 4,
                            Name = "Comité Tecnico"
                        });
                });

            modelBuilder.Entity("BD.Area", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("id");

                    b.ToTable("Area", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Finanzas"
                        },
                        new
                        {
                            id = 2,
                            Name = "Tecnología"
                        },
                        new
                        {
                            id = 3,
                            Name = "Recursos Humanos"
                        },
                        new
                        {
                            id = 4,
                            Name = "Operaciones"
                        });
                });

            modelBuilder.Entity("BD.ProjectApprovalStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ApproverRole_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverUser_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectProposal_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRole_ID");

                    b.HasIndex("ApproverUser_ID");

                    b.HasIndex("ProjectProposal_ID");

                    b.HasIndex("Status_ID");

                    b.ToTable("ProjectApprovalStep", (string)null);
                });

            modelBuilder.Entity("BD.ProjectProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Area_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateBy_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Type_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Area_ID");

                    b.HasIndex("CreateBy_ID");

                    b.HasIndex("Status_ID");

                    b.HasIndex("Type_ID");

                    b.ToTable("ProjectProposal", (string)null);
                });

            modelBuilder.Entity("BD.ProjectType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("id");

                    b.ToTable("ProjectType", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Mejora de Procesos"
                        },
                        new
                        {
                            id = 2,
                            Name = "Innovación y Desarrollo"
                        },
                        new
                        {
                            id = 3,
                            Name = "Infraestructura"
                        },
                        new
                        {
                            id = 4,
                            Name = "Capacitación Interna"
                        });
                });

            modelBuilder.Entity("BD.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Role_ID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Role_ID");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Email = "jferreyra@unaj.com",
                            Name = "José Ferreyra",
                            Role_ID = 2
                        },
                        new
                        {
                            id = 2,
                            Email = "alucero@unaj.com",
                            Name = "Ana Lucero",
                            Role_ID = 1
                        },
                        new
                        {
                            id = 3,
                            Email = "gmolinas@unaj.com",
                            Name = "Gonzalo Molinas",
                            Role_ID = 2
                        },
                        new
                        {
                            id = 4,
                            Email = "lolivera@unaj.com",
                            Name = "Lucas Olivera",
                            Role_ID = 3
                        },
                        new
                        {
                            id = 5,
                            Email = "dfagundez@unaj.com",
                            Name = "Danilo Fagundez",
                            Role_ID = 4
                        },
                        new
                        {
                            id = 6,
                            Email = "ggalli@unaj.com",
                            Name = "Gabriel Galli",
                            Role_ID = 4
                        });
                });

            modelBuilder.Entity("BD.ApprovalRule", b =>
                {
                    b.HasOne("BD.ApproverRole", "ApproverRole")
                        .WithMany()
                        .HasForeignKey("ApproverRole_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BD.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_ID");

                    b.HasOne("BD.ProjectType", "Type")
                        .WithMany()
                        .HasForeignKey("Type_ID");

                    b.Navigation("ApproverRole");

                    b.Navigation("Area");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BD.ProjectApprovalStep", b =>
                {
                    b.HasOne("BD.ApproverRole", "ApproverRole")
                        .WithMany()
                        .HasForeignKey("ApproverRole_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BD.User", "ApproverUser")
                        .WithMany()
                        .HasForeignKey("ApproverUser_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BD.ProjectProposal", "ProjectProposal")
                        .WithMany()
                        .HasForeignKey("ProjectProposal_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BD.ApprovalStatus", "Status")
                        .WithMany()
                        .HasForeignKey("Status_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApproverRole");

                    b.Navigation("ApproverUser");

                    b.Navigation("ProjectProposal");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("BD.ProjectProposal", b =>
                {
                    b.HasOne("BD.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BD.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateBy_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BD.ApprovalStatus", "Status")
                        .WithMany()
                        .HasForeignKey("Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BD.ProjectType", "Type")
                        .WithMany()
                        .HasForeignKey("Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("CreateBy");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BD.User", b =>
                {
                    b.HasOne("BD.ApproverRole", "Role")
                        .WithMany()
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
